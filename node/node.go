package node

import "crypto/rsa"

type node struct {
	privKey     *rsa.PrivateKey
	pubKey      []byte
	ownerAdress []byte
	presynced   []byte
	synced      []byte
}

/*
# Распределение
Распределение производится по следующим принципам:
 - Checker каждую минуту проверяет, осущестсвлялось ли распределение в текущий
 час, (проверяет базу данных со временем в виде байтов)
 - 
*/

/*
# Транзакции
Добавить кадой транзакции поле, предполагающее подпись ноды, если данное поле
не несет нулевое значение, то транзакция считается проведенной на одной ноде и будет ждать в течении 1с. Ответа от первой ноды для проведения транзакции.
*/

/*
# Подключение
Процедура подключения других держателей сети выглядит следующим образом:
 - Проверка баланса держателя подключаемой ноды
 - Проверка количества существующих подключений
 - Запись ноды presynced
 - Фиксация времени поступления запроса
 - Отправка всех поступаемых сообщений
 - Отправка всех когда либо совершенных в сети транзакций
 - Ожидание ответа по проверке всех транзакций в сети
*/

func (n *node) Start() {

}

func (n *node) Connect() {

}

func (n *node) writeTransaction() {

}
