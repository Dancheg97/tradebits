syntax = "proto3";

option go_package = "sync_tree_server/api";

package api;


/*
Go generation:
protoc api/api.proto --go-grpc_out=. --go_out=.
Dart generation:
protoc lib/api/api.proto --dart_out=grpc:.
*/

service SyncTree{
    rpc UserCreate(UserCreateRequest) returns (Response) {}
    rpc UserUpdate(UserUpdateRequest) returns (Response) {}
    rpc UserSend(UserSendRequest) returns (Response) {}
    rpc UserLook(UserInfoRequest) returns (UserInfoResponse) {}

    
}

// most common response, checks if operation goes ok
message Response{
    bool Passed = 1;
}

// request to craete a new user
message UserCreateRequest{
    bytes PublicKey = 1;
    bytes MesssageKey = 2;
    string PublicName = 3;
    bytes Sign = 4;
}

// request to update user information
message UserUpdateRequest{
    bytes PublicKey = 1;
    bytes MesssageKey = 2;
    string PublicName = 3;
    bytes Sign = 4;
}

// request to get info about some user balance
message UserInfoRequest{
    bytes Adress = 1;
}

// reqsponse giving public name of requested adress
message UserInfoResponse{
    string PublicName = 1;
    uint64 Balance = 2;
}

// reqsponse giving public name of requested adress
message UserSendRequest{
    bytes PublicKey = 1;
    uint64 SendAmount = 2;
    bytes RecieverAdress = 3;
    bytes Sign = 4;
}
