syntax = "proto3";

option go_package = "./api";

package api;

/*
CODE GENERATION BASH COMMANDS:
Go:
protoc api/api.proto --go-grpc_out=. --go_out=.
Dart:
protoc lib/_net/api.proto --dart_out=grpc:.
*/




//Response (universal response, when no return value required)
message Response{}




service Info{
    rpc User(InfoRequests.Adress) returns (InfoResponses.UserInfo) {}
    rpc UserName(InfoRequests.Adress) returns (InfoResponses.UserName) {}
    rpc UserHasTrades(InfoRequests.UserMarketAdresses) returns (
        InfoResponses.HasTrades
    ) {}
    rpc Market(InfoRequests.Adress) returns (InfoResponses.MarketInfo) {}
    rpc Search(InfoRequests.SearchText) returns (
        InfoResponses.MarketAdresses
    ) {}
    rpc Messages(InfoRequests.UserMarketAdresses) returns (
        InfoResponses.Messages
    ) {}
}
message InfoRequests{
    message Adress{
        bytes adress = 1;
    }
    message UserMarketAdresses{
        bytes marketAdress = 1;
        bytes userAdress = 2;
    }
    message SearchText{
        string text = 1;
    }
}

message InfoResponses {
    message UserInfo{
        string publicName = 1;
        uint64 balance = 2;
        bytes messageKey = 3;
        repeated bytes marketAdresses = 4;
        repeated uint64 marketBalances = 5;
    }
    message UserName {
        string name = 1;
    }
    message MarketInfo{
        string name = 1;
        bytes messageKey = 2;
        string imageLink = 3;
        string description = 4;
        uint64 operationCount = 5;
        repeated uint64 buys = 6; //each pair - single deal
        repeated uint64 sells = 7; //each pair - single deal
        uint64 activeBuys = 8;
        uint64 activeSells = 9;
        uint64 inputFee = 10;
        uint64 outputFee = 11;
        string workTime = 12;
        uint64 delimiter = 14;
    }
    message MarketAdresses{
        repeated bytes concatenatedMarketAdresses = 1;
    }
    message Messages{
        repeated string messages = 1;
    }
    message HasTrades{
        bool hasTrades = 1;
    }
}


service User{
    rpc Create(UserCreateRequest) returns (Response) {}
    rpc Update(UserUpdateRequest) returns (Response) {}
    rpc Send(UserSendRequest) returns (Response) {}
    rpc Deposit(UserDepositRequest) returns (Response) {}
    rpc Withdrawal(UserWithdrawalRequest) returns (Response) {}
    rpc SendMessage(UserSendMessageRequest) returns (Response) {}
    rpc Buy(UserBuyRequest) returns (Response) {}
    rpc Sell(UserSellRequest) returns (Response) {}
    rpc CancelTrade(UserCancelTradeRequest) returns (Response) {}
}

message UserCreateRequest{
    bytes PublicKey = 1;
    bytes MesssageKey = 2;
    string PublicName = 3;
    bytes Sign = 4;
}

message UserUpdateRequest{
    bytes PublicKey = 1;
    bytes MesssageKey = 2;
    string PublicName = 3;
    bytes Sign = 4;
}

message UserSendRequest{
    bytes PublicKey = 1;
    uint64 SendAmount = 2;
    bytes RecieverAdress = 3;
    bytes Sign = 4;
}

message UserDepositRequest{
    bytes PublicKey = 1;
    bytes MarketAdress = 2;
    uint64 Amount = 3;
    bytes Sign = 4;
}

message UserWithdrawalRequest{
    bytes PublicKey = 1;
    bytes MarketAdress = 2;
    uint64 Amount = 3;
    bytes Sign = 4;
}

message UserSendMessageRequest{
    bytes PublicKey = 1;
    bytes Adress = 2;
    string Message = 3;
    bytes Sign = 4;
}

message UserBuyRequest{
    bytes PublicKey = 1;
    bytes Adress = 2;
    uint64 Recieve = 3;
    uint64 Offer = 4;
    bytes Sign = 5;
}

message UserSellRequest{
    bytes PublicKey = 1;
    bytes Adress = 2;
    uint64 Recieve = 3;
    uint64 Offer = 4;
    bytes Sign = 5;
}

message UserCancelTradeRequest{
    bytes PublicKey = 1;
    bytes MarketAdress = 2;
    bytes Sign = 3;
}




service Market{
    rpc MarketCraete(MarketCreateRequest) returns (Response) {}
    rpc MarketUpdate(MarketUpdateRequest) returns (Response) {}
    rpc MarketDeposit(MarketDepositRequest) returns (Response) {}
    rpc MarketWithdrawal(MarketWithdrawalRequest) returns (Response) {}
    rpc MarketSendMessage(MarketSendMessageRequest) returns (Response) {}
}

message MarketCreateRequest{
    bytes PublicKey = 1;
    bytes MesssageKey = 2;
    string Name = 3;
    string Img = 4;
    string Descr = 5;
    bytes Sign = 6;
    uint64 inputFee = 7;
    uint64 outputFee = 8;
    string workTime = 9;
    uint64 delimiter = 10;
}

message MarketUpdateRequest{
    bytes PublicKey = 1;
    bytes MesssageKey = 2;
    string Name = 3;
    string Img = 4;
    string Descr = 5;
    bytes Sign = 6;
    uint64 inputFee = 7;
    uint64 outputFee = 8;
    string workTime = 9;
    uint64 delimiter = 10;
}

message MarketDepositRequest{
    bytes PublicKey = 1;
    bytes UserAdress = 2;
    uint64 Amount = 3;
    bytes Sign = 4;
}

message MarketWithdrawalRequest{
    bytes PublicKey = 1;
    bytes UserAdress = 2;
    uint64 Amount = 3;
    bytes Sign = 4;
}

message MarketSendMessageRequest{
    bytes PublicKey = 1;
    bytes Adress = 2;
    string Message = 3;
    bytes Sign = 4;
}
